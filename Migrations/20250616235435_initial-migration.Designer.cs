// <auto-generated />
using System;
using Atv_Cap7WebAPI.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace Atv_Cap7WebAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250616235435_initial-migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("NotaComportamental")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("NotaTecnica")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId")
                        .IsUnique();

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Inscricao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CandidatoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("VagaId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("VagaId");

                    b.ToTable("Inscricoes");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.ProgramaDiversidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.ToTable("ProgramasDiversidade");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Aberta")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("EmpresaProgramaDiversidade", b =>
                {
                    b.Property<int>("EmpresasId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("ProgramasDiversidadeId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("EmpresasId", "ProgramasDiversidadeId");

                    b.HasIndex("ProgramasDiversidadeId");

                    b.ToTable("Empresa_ProgramaDiversidade", (string)null);
                });

            modelBuilder.Entity("ProgramaDiversidadeVaga", b =>
                {
                    b.Property<int>("ProgramasDiversidadeId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("VagasId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("ProgramasDiversidadeId", "VagasId");

                    b.HasIndex("VagasId");

                    b.ToTable("Vaga_ProgramaDiversidade", (string)null);
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Avaliacao", b =>
                {
                    b.HasOne("Atv_Cap7WebAPI.Models.Candidato", "Candidato")
                        .WithOne("Avaliacao")
                        .HasForeignKey("Atv_Cap7WebAPI.Models.Avaliacao", "CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Inscricao", b =>
                {
                    b.HasOne("Atv_Cap7WebAPI.Models.Candidato", "Candidato")
                        .WithMany("Inscricoes")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atv_Cap7WebAPI.Models.Vaga", "Vaga")
                        .WithMany("Inscricoes")
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Vaga", b =>
                {
                    b.HasOne("Atv_Cap7WebAPI.Models.Empresa", "Empresa")
                        .WithMany("Vagas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("EmpresaProgramaDiversidade", b =>
                {
                    b.HasOne("Atv_Cap7WebAPI.Models.Empresa", null)
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atv_Cap7WebAPI.Models.ProgramaDiversidade", null)
                        .WithMany()
                        .HasForeignKey("ProgramasDiversidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProgramaDiversidadeVaga", b =>
                {
                    b.HasOne("Atv_Cap7WebAPI.Models.ProgramaDiversidade", null)
                        .WithMany()
                        .HasForeignKey("ProgramasDiversidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Atv_Cap7WebAPI.Models.Vaga", null)
                        .WithMany()
                        .HasForeignKey("VagasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Candidato", b =>
                {
                    b.Navigation("Avaliacao");

                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Empresa", b =>
                {
                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("Atv_Cap7WebAPI.Models.Vaga", b =>
                {
                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
